{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/scan-to-email/scan-to-email.component.html","webpack:///./src/app/scan-to-email/scan-to-email.component.scss","webpack:///./src/app/scan-to-email/scan-to-email.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ScanToEmailComponent} from \"./scan-to-email/scan-to-email.component\";\n\nconst routes: Routes = [\n  {path: '', redirectTo:'scanToEmail', pathMatch: 'full'},\n  {path: 'scanToEmail', component: ScanToEmailComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"#\\\">Brother Printer</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavAltMarkup\\\" aria-controls=\\\"navbarNavAltMarkup\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link active\\\" routerLink=\\\"/scanToEmail\\\">Scan To Email<span class=\\\"sr-only\\\">(current)</span></a>\\n    </div>\\n  </div>\\n</nav>\\n<div class=\\\"container\\\">\\n  <div class=\\\"col-lg-12\\\">\\n<router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'brother-printer';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { ScanToEmailComponent } from './scan-to-email/scan-to-email.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ScanToEmailComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Email</label>\\n          <input class=\\\"form-control\\\" id=\\\"Destination\\\" name=\\\"Destination\\\" [(ngModel)]=\\\"scanToEmailData.Destination\\\" type=\\\"email\\\"/>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>ScanTray</label>\\n          <select [(ngModel)]=\\\"scanToEmailData.ScanTray\\\" class=\\\"form-control\\\" >\\n            <option *ngFor=\\\"let option of scanTrayList; index as i\\\">{{option}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>ColorMode</label>\\n          <select [(ngModel)]=\\\"scanToEmailData.ColorMode\\\" class=\\\"form-control\\\" >\\n            <option *ngFor=\\\"let option of colorModeList; index as i\\\">{{option}}</option>\\n          </select>\\n         </div>\\n      </div>\\n      <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Resolution</label>\\n          <select [(ngModel)]=\\\"scanToEmailData.Resolution\\\" class=\\\"form-control\\\" >\\n            <option *ngFor=\\\"let option of resolutionList; index as i\\\">{{option}}</option>\\n          </select>\\n         </div>\\n        <div class=\\\"form-group\\\">\\n          <label>FileType</label>\\n          <select [(ngModel)]=\\\"scanToEmailData.FileType\\\" class=\\\"form-control\\\" >\\n            <option *ngFor=\\\"let option of fileTypeList; index as i\\\">{{option}}</option>\\n          </select>\\n         </div>\\n        <div class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-outline-primary float-right\\\" (click)=\\\"send()\\\">{{scanToEmailData.Destination === '' ?  'Scan' : 'Scan To Email'}}</button>\\n        </div>\\n      </div>\\n  </div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjYW4tdG8tZW1haWwvc2Nhbi10by1lbWFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-scan-to-email',\n  templateUrl: './scan-to-email.component.html',\n  styleUrls: ['./scan-to-email.component.scss']\n})\nexport class ScanToEmailComponent {\npublic scanToEmailData = {\n  Destination: \"\",\n  ScanTray: \"ADF\",\n  ColorMode: \"Color\",\n  Resolution: \"Normal\",\n  FileType: \"PDF\"\n}\npublic scanTrayList = ['ADF'];\npublic colorModeList = ['Color', 'Gray', 'Mono'];\npublic resolutionList = ['Normal', 'Low', 'High'];\npublic fileTypeList = ['PDF', 'JPEG'];\n  constructor(private http: HttpClient) { }\n\n  send() {\n    this.http.post('/api/commandxml/add', {\"ScanToEmail\": this.scanToEmailData}).subscribe(() => {\n      this.scanToEmailData = {\n        Destination: \"\",\n        ScanTray: \"ADF\",\n        ColorMode: \"Color\",\n        Resolution: \"Normal\",\n        FileType: \"PDF\"\n      }\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}